name: ci

on:
  push:
    branches:
      - 'dev'

jobs:
  docker-repository-check:
    runs-on: ubuntu-latest
    steps:
      -
        name: "Convert repository name to docker hub repository name"
        run: |
          echo "::set-output name=DOCKER_LABEL::$(sed 's/^[[:upper:]]/\L&/;s/[[:upper:]]/\L_&/g' <<< '${{ github.event.repository.name }}')"
      -
        name: "Check if docker repository exists"
        run: |
          curl --location --fail --header "Authorization: JWT $(curl --location --header "Content-type: application/json" --request POST --data '{"username": "${{ secrets.DOCKERHUB_USERNAME }}", "password": "${{ secrets.DOCKERHUB_TOKEN }}"}' https://hub.docker.com/v2/users/login | jq -r '.token')" https://hub.docker.com/v2/repositories/gisat/${{ jobs.docker-repository-check.outputs.DOCKER_LABEL }}
  
  tests:
    runs-on: ubuntu-latest
    needs: [docker-repository-check]
    services:
        postgres:
            image: mdillon/postgis
            ports:
                - '5432:5432'
            env:
                POSTGRES_PASSWORD: postgres
                POSTGRES_DB: panther
    steps:
        - 
          name: "Checkout"
          uses: actions/checkout@v2.3.4
        - 
          name: "Setup NodeJS environment"
          uses: actions/setup-node@v2.1.5
          with:
              node-version: '14.x'
        - 
          name: "Install dependencies"
          run: |
            npm ci
        - 
          name: "Start application"
          run: |
            npm run start &
        - 
          name: "Run application tests"
          run: |
            npm run test:wait
  
  build:
    runs-on: ubuntu-latest
    needs: [docker-repository-check, tests]
    steps:
      - 
        name: "Checkout"
        uses: actions/checkout@v2
      - 
        name: "Install dependencies"
        run: |
          npm ci
      - 
        name: "Build application"
        run: |
          npm run build
      - 
        name: "Get docker image metadata"
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: gisat/${{ needs.docker-repository-check.outputs.DOCKER_LABEL }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
          flavor: |
            latest=false
      - 
        name: "Login to DockerHub"
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - 
        name: "Build and push"
        uses: docker/build-push-action@v2
        if: ${{ success() }}
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  
  deploy:
    runs-on: ubuntu-latest
    needs: [docker-repository-check, tests, build]
    steps:
      -
        name: "Deploy application on server"
        run: |
          echo "There is no deployment needed at this moment"
          exit 0