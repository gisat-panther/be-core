name: ci

on:
  push:

jobs:
  test:
    runs-on: ubuntu-latest
    services:
        postgres:
            image: postgis/postgis
            ports:
                - '5432:5432'
            env:
                POSTGRES_PASSWORD: postgres
                POSTGRES_DB: panther
    steps:
        - 
          name: "Checkout"
          uses: actions/checkout@v2.3.4
        - 
          name: "Setup NodeJS environment"
          uses: actions/setup-node@v2.4.0
          with:
              node-version: '14.x'
        - 
          name: "Install dependencies"
          run: |
            npm ci
        - 
          name: "Start application"
          run: |
            npm run start &
        - 
          name: "Run application tests"
          run: |
            npm run test:wait

  check:
    runs-on: ubuntu-latest
    if: |
      ( github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/performance' ) 
      && contains(github.event.head_commit.message, '#deploy')
    outputs:
      DOCKER_LABEL: ${{ steps.convert-repository-name.outputs.DOCKER_LABEL }}
    steps:
      -
        name: "Convert repository name to docker hub repository name"
        id: convert-repository-name
        run: |
          echo "::set-output name=DOCKER_LABEL::$(sed 's/^[[:upper:]]/\L&/;s/[[:upper:]]/\L_&/g' <<< '${{ github.event.repository.name }}')"
      -
        name: "Check if docker repository exists"
        run: |
          curl --location --fail --header "Authorization: JWT $(curl --location --header "Content-type: application/json" --request POST --data '{"username": "${{ secrets.DOCKERHUB_USERNAME }}", "password": "${{ secrets.DOCKERHUB_TOKEN }}"}' https://hub.docker.com/v2/users/login | jq -r '.token')" https://hub.docker.com/v2/repositories/gisat/${{ steps.convert-repository-name.outputs.DOCKER_LABEL }}
  
  build:
    runs-on: ubuntu-latest
    if: |
      ( github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/performance' ) 
      && contains(github.event.head_commit.message, '#deploy')
    needs: [test, check]
    steps:
      - 
        name: "Checkout"
        uses: actions/checkout@v2
      - 
        name: "Get docker image metadata"
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: gisat/${{ needs.check.outputs.DOCKER_LABEL }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
          flavor: |
            latest=false
      - 
        name: "Login to DockerHub"
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - 
        name: "Build and push"
        uses: docker/build-push-action@v2
        if: ${{ success() }}
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  
  deploy:
    runs-on: ubuntu-latest
    if: |
      ( github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/performance' ) 
      && contains(github.event.head_commit.message, '#deploy')
    needs: [test, check, build]
    steps:
      -
        name: "Deploy application on remote server"
        if: ${{ github.ref == 'refs/heads/dev' &&  }}
        run: |
          curl --location --fail "https://ptr.gisat.cz/webhook/hooks/deploy?token=102aeeb9-233d-4e29-97c4-91cdc8852d97&service=be"
  